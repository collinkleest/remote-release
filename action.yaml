name: "Remote Release Action"

description: "Custom remote release action to deploy code onto a remote server via ssh"

inputs:
  host:
    description: "Hostname or IP address of remote server (i.e. 192.168.1.1 or example.com)"
    required: true
  port:
    description: "Port number of ssh server running on remote server (defaults to 22)"
    default: "22"
    required: false
  username:
    description: "Username to log in under for ssh on the remote server"
    required: true
  password:
    description: "Password to log into the ssh server on the remote server"
    required: true
  target-directory:
    description: "Target directory where you want the deployed code to go"
    required: false
    default: "~/github"
  version:
    description: "The desired version of the wrapped action (i.e. v1.2.2) (defaults to master)"
    required: false
    default: "master"
  command_timeout:
    description: "Amount of time alloted until the command times out"
    required: false
    default: "15m"
  command:
    description: "Release command to run in the context of the repo"
    required: false
    default: |
      docker compose down
      docker compose up -d

runs:
  using: "composite"
  steps:
    - name: "Deploy Code"
      uses: appleboy/ssh-action${{ inputs.version != 'master' && format('@{0}', inputs.version) || '' }}
      with:
        host: ${{ inputs.host }}
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}
        port: ${{ inputs.port }}
        command_timeout: ${{ inputs.command_timeout }}
        script: |
          mkdir -p ${{ inputs.target-directory }} && cd ${{ inputs.target-directory }}
          git clone "$(echo ${{ github.repositoryUrl }} | sed 's/git:\/\//https:\/\//')"
          repo_name=$(echo "${{ github.repository }}" | cut -d'/' -f2)
          cd ${{ inputs.target-directory }}/${repo_name}
          git pull
          ${{ inputs.command }}
